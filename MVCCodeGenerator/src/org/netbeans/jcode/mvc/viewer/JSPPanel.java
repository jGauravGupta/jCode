/**
 * Copyright [2016] Gaurav Gupta
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package org.netbeans.jcode.stack.jsp;

import java.awt.event.ItemEvent;
import javax.swing.ComboBoxModel;
import javax.swing.text.JTextComponent;
import org.apache.commons.lang.StringUtils;
import org.netbeans.api.project.SourceGroup;
import org.netbeans.jcode.stack.config.panel.*;
import org.netbeans.spi.java.project.support.ui.PackageView;

/**
 *
 * @author Gaurav Gupta
 */
public class JSPPanel extends LayerConfigPanel<JSPData> {

    private static final String DEFAULT_FOLDER = "view";

    public JSPPanel() {
        initComponents();

    }

    @Override
    public void init(String _package, SourceGroup sourceGroup) {
        this.setConfigData(new JSPData());
        if (sourceGroup != null) {
            folderCombo.setRenderer(PackageView.listRenderer());
            ComboBoxModel model = PackageView.createListView(sourceGroup);
            if (model.getSize() > 0) {
                model.setSelectedItem(model.getElementAt(0));
            }
            folderCombo.setModel(model);
            setFolder(DEFAULT_FOLDER);
        }
    }

    public String getFolder() {
        return ((JTextComponent) folderCombo.getEditor().getEditorComponent()).getText();
    }

    private void setFolder(String _package) {
        ComboBoxModel model = folderCombo.getModel();
        for (int i = 0; i < model.getSize(); i++) {
            if (model.getElementAt(i).toString().equals(_package)) {
                model.setSelectedItem(model.getElementAt(i));
                return;
            }
        }
        ((JTextComponent) folderCombo.getEditor().getEditorComponent()).setText(_package);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wrapperPanel = new javax.swing.JPanel();
        folderCombo = new javax.swing.JComboBox();
        folderLabel = new javax.swing.JLabel();

        wrapperPanel.setLayout(new java.awt.BorderLayout(10, 0));

        folderCombo.setEditable(true);
        folderCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        folderCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                folderComboItemStateChanged(evt);
            }
        });
        wrapperPanel.add(folderCombo, java.awt.BorderLayout.CENTER);

        org.openide.awt.Mnemonics.setLocalizedText(folderLabel, org.openide.util.NbBundle.getMessage(JSPPanel.class, "JSPPanel.folderLabel.text")); // NOI18N
        wrapperPanel.add(folderLabel, java.awt.BorderLayout.LINE_START);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(wrapperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(wrapperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void folderComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_folderComboItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.getConfigData().setFolder(getFolder());
        }        // TODO add your handling code here:
    }//GEN-LAST:event_folderComboItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox folderCombo;
    private javax.swing.JLabel folderLabel;
    private javax.swing.JPanel wrapperPanel;
    // End of variables declaration//GEN-END:variables

}
